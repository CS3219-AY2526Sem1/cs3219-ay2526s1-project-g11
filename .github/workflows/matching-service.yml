name: Matching Service CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.5
          cache: true

      - name: Install dependencies
        run: go mod tidy
        working-directory: backend/matching-service

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: backend/matching-service
          args: --timeout=5m
        continue-on-error: true

      - name: Build
        run: mkdir -p bin && go build -o bin/matching-service ./cmd/web
        working-directory: backend/matching-service

      - name: Run tests
        run: go test -v ./...
        working-directory: backend/matching-service

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/matching-service:${{ github.sha }} ./backend/matching-service
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/matching-service:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy matching-service \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/matching-service:${{ github.sha }} \
            --region asia-east1 \
            --platform managed \
            --port=8080
